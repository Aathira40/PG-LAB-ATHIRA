{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Times New Roman;}}
{\colortbl ;\red0\green0\blue0;\red255\green0\blue0;\red0\green0\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs40\lang9                PROGRAMS\par
\fs22\par

\pard\sl240\slmult1 1.\cf1\f1\fs26 . Familiarizing Text Editor, IDE, Code Analysis Tools etc // Use any IDE \par
\cf0\par

\pard\sa200\sl276\slmult1\f0\fs24 Pycharm\par
specialized project views allowing quick switching between files\par
facilitates web development along django flask and web 2py\par
\fs22 Spider\par
Spyder is a free and open source scientific environment written in Python, for Python, and designed by and for scientists, engineers and data analysts. It features a unique combination of the advanced editing, analysis, debugging, and profiling functionality of a comprehensive development too\par
eric\par
Eric is a full featured Python editor and IDE, written in Python. It is based on the cross platform Qt UI toolkit, integrating the highly flexible Scintilla editor control. It is designed to be usable as everdays' quick and dirty editor as well as being usable as a professional project management tool \par
\par
\par
\par

\pard\sl240\slmult1 2.    \f1\fs26 . Display future leap years from current year to a final year entered by user.\par

\pard\sa200\sl276\slmult1\f0\fs22\par
   c=int(input("enter current year"))\par
   f=int(input("enter final year"))\par
    if(c<f):\par
    print("leap year:",end=" ")\par
for i in range(c,f):\par
    if(i%4==0 and i%100!=0):   \par
        print(i,end=" ")\par
\par
output:\par
\par
enter current year 2014\par
enter final year 2040\par
leap year: 2016 2020 2024 2028 2032 2036 \par
\par

\pard\sl240\slmult1 3.\f1\fs26 .\b List comprehensions:\par

\pard\sa200\sl276\slmult1\par
a)Generate positive list of numbers from a given list of\expndtw-12  \expndtw0 integers\b0\f0\fs22\par
\par
list=[1,3,-4,-8,9]\par
p=[n for n in list if n>=0]\par
print(p)\par
output:\par
[1, 3, 9]\par

\pard\sl240\slmult1\tx554 b)\b\f1\fs26 Square of N\expndtw-2  \expndtw0 number\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
n=int(input("enter a limit"))\par
s=[i**2 for i in range(1,n)]\par
print("square is:",s,end=" ")\par
output:\par
enter a limit  5\par
square is: [1, 4, 9, 16] \par
\par
c)\b\f1\fs26 Form a list of vowels selected from a given\expndtw-15  \expndtw0 word\b0\f0\fs22\par
n=str(input("enter a string"))\par
for i in n:\par
    if i in"aeiouAEIOU":\par
      print(i)\par
output:\par
enter a string   aysha\par
a\par
a\par

\pard\sl240\slmult1\tx553 d)\b\f1\fs26 List ordinal value of each element of a word (Hint: use ord() to get ordinal\expndtw-18  \expndtw0 values)\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
n=str(input("enter a str"))\par
for i in n:\par
  print(ord(i),end=" ")\par
output:\par
enter a str aathira\par
32 97 97 116 104 105 114 97 \par

\pard\li140\sb184\sl240\slmult1 4.\b\f1\fs26 Count the occurrences of each word in a line of text.\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
str1 = input("Enter a string : ")\par
wordlist = str1.split()\par
count= []\par
for w in wordlist: count.append(wordlist.count(w))\par
print("count of the occurrence:" + str(list(zip(wordlist, count))))\par
\par
ouput:\par
\par
Enter a string :  my name is athira\par
count of the occurrence:[('my', 1), ('name', 1), ('is', 1), ('athira', 1)]\par
5.\b\f1\fs26 Prompt\expndtw-14  \expndtw0 the\expndtw-14  \expndtw0 user\expndtw-14  \expndtw0 for\expndtw-14  \expndtw0 a\expndtw-13  \expndtw0 list\expndtw-14  \expndtw0 of\expndtw-14  \expndtw0 integers.\expndtw-11  \expndtw0 For\expndtw-13  \expndtw0 all\expndtw-14  \expndtw0 values\expndtw-13  \expndtw0 greater\expndtw-14  \expndtw0 than\expndtw-13  \expndtw0 100,\expndtw-14  \expndtw0 store\expndtw-14  \expndtw0\lquote over\rquote\expndtw-14  \expndtw0 instead\b0\f0\fs22\par
\par
n=[]\par
s=int(input("enter a limit"))\par
print("enter values")\par
for i in range(0,s):\par
    n.append(int(input()))\par
print(" values after\\n")\par
for i in range(0,len(n)):\par
            if n[i]>=100:\par
                print("over")\par
            else:\par
                 print(n[i])\par
\par
output:\par
enter a limit3\par
enter values\par
23\par
45\par
109\par
 values after\par
\par
23\par
45\par
over\par

\pard\li140\sb184\sl240\slmult1 6.\b\f1\fs28 . Store a list of first names. Count the occurrences of \lquote a\rquote  within the list\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
list=['athira','frd','abc','a','a']\par
l1=list.count("a")\par
print("occurence",l1)\par
output:\par
occurence 2\par

\pard\li140\ri161\sb185\sa160\sl259\slmult0 7.\cf2\f1\fs26 . \cf0\b\f0\fs28 Enter 2 lists of integers. Check (a) Whether list are of same length (b) whether list sums to same value (c) whether any value occur in both\par

\pard\sa200\sl276\slmult1\b0\fs22 lst=[1,3,5,7,9,11,4]\par
lst1=[5,13,5,7,0,6,1]\par
s=int(0)\par
c=int(0)\par
if(len(lst)==len(lst1)):\par
    print("Lists\~are\~of\~same\~length")\par
else:\par
    print("Lists\~have\~different\~length")\par
for\~i\~in\~range(0,len(lst)\~and\~len(lst1)):\~\par
\~\~s=s+lst[i]\par
\~\~c=c+lst1[i]\par
if(s==c):\par
\~\~print("equal\~sum")\par
else:\par
\~\~print("not\~same\~sum")\par
print("Elements\~that\~matched\~are:")\~\par
l=[]\par
for\~i\~in\~range(0,len(lst)):\par
\~\~for\~j\~in\~range(0,len(lst1)):\par
\~\~\~\~if\~lst[i]==lst1[j]:\par
\~\~\~\~\~\~\~\~l.append(lst[i]\~and\~lst1[j])\~\par
\~\~\~\~else:\par
\~\~\~\~\~\~continue\par
print(l)\par
output:\par
lists are of same length\par
not same sum\par
elements that  matched are:\par
[1,5,7]\par
8.\cf1\f1\fs30 .\fs26 Get a string from an input string where all occurrences of first character replaced with \lquote $\rquote , except first character. [eg: onion -> oni$n]\par
\cf0\f0\fs22\par
str="athira"\par
char=str[0]\par
str=str.replace(char,'$')\par
str=char + str[1:]\par
print(str)\par
output:     athir$\par

\pard\li140\sb77\sl240\slmult1 9.\b\f1\fs28 Create a string from given string where first and last characters exchanged. [eg: python -> nythop]\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
str=input("enter a string")\par
str1=str[-1:]+str[1:-1]+str[:1]\par
print("string is",str1)\par
output:\par
      enter a string  python\par
        string is nythop\par

\pard\li140\sl240\slmult1 10.\b\f1\fs26 Accept the radius from user and find area of circle.\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
pi=3.14\par
r=int(input("enter radius"))\par
a=pi*r*r\par
print("area",a)\par
\par
output:\par
           enter radius    2\par
                     12.56\par
11.\f1\fs26 Find biggest of 3 numbers entered\f0\fs22\par
a=int(input("enter a number"))\par
b=int(input("enter a number"))\par
c=int(input("enter a number"))\par
if(a>b and a>c):\par
    print("a is the largest:",a)\par
elif(b>c):\par
        print("b is the largest:",b)\par
else:\par
        print("c is the largest:",c)\par
output:\par
enter a number 5\par
enter a number6\par
enter a number1\par
b is the largest: 6\par
\par

\pard\li140\sl240\slmult1 12.\b\f1\fs28 Accept a file name from user and print extension of that\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
\par
x,y=(input("enter a {{\field{\*\fldinst{HYPERLINK file:").split('.' }}{\fldrslt{file:").split('.'\ul0\cf0}}}}\f0\fs22 ))\par
print("file extension:",y)\par
output:\par
    enter a file:  hello.python\par
      file extension: python\par
13.\cf1\f1\fs26 Create a list of colors from comma-separated color names entered by user.Display first and last\expndtw-2  \expndtw0 colors\cf0\f0\fs22\par
a=[]\par
for i in range(3): \par
   b=input("enter the color:")\par
   a.append(b)\par
print(a)\par
print(a[0])\par
print(a[2])\par
output:\par
enter the color:w\par
enter the color:b\par
enter the color:y\par
['w', 'b', 'y']\par
w\par
y\par
\par

\pard\li140\sb1\sl240\slmult1 14.\b\f1\fs28 Accept an integer n and compute n+nn+nnn\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
n=input("enter number")\par
x=int(n+n+n)\par
y=int(n+n)\par
z=int(n)\par
print(x+y+z)\par
ouput:\par
enter number5\par
615\par
\par

\pard\li140\sb1\sl240\slmult1 15.\b\f1\fs28 Print out all colors from color-list1 not contained in color-list2.\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
list1=set(['red','white','blue'])\par
list2=set(['green','black','red'])\par
print(list1.difference(list2))\par
output:\par
\{'blue', 'white'\}\par
16.\cf1\b\f1\fs28 Create a single string separated with space from two strings by swapping the character at position 1.\cf0\b0\f0\fs22\par
a="thir"\par
b="damu"\par
p1=a[0]\par
p2=b[0]\par
c=b[0]+a[1:]+" "+ a[-4]+b[1:] \par
print(c)\par
output:\par
dhir tamu\par

\pard\li140\sb77\sl240\slmult1 19.\cf2\b\f1\fs26 Find gcd of 2 numbers.\par

\pard\sa200\sl276\slmult1\cf0\b0\f0\fs22\par
a=int(input("enter a number"))\par
b=int(input("enter a number"))\par
i=1\par
while(i<=a and i<=b):\par
    if(a%i==0 and b%i==0):\par
        gcd=i\par
    i=i+1\par
print("gcd",gcd)\par
output:\par
enter a number 5\par
enter a number4\par
gcd 1\par
20.\b\f1\fs28 .From a list of integers, create a list removing even numbers.\b0\f0\fs22\par
n=[2,3,6,7,9,4,8]\par
n=[x for x in n if x%2!=0]\par
print("nos after removing",n)\par
output:\par
nos after removing [3, 7, 9]\par
\par
\par
\par
}
 